name: Ambiente Desenvolvimento

on:  
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Compilação
    runs-on: ubuntu-latest

    steps:
    - name: Git Checkout
      uses: actions/checkout@v3
    - name: Configura JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Compilação
      run: mvn -B compile --file pom.xml
    
  code-quality:
    name: Qualidade de Código
    needs: build
    runs-on: ubuntu-latest        
    
    steps:
    - name: Git Checkout
      uses: actions/checkout@v3
    - name: Adiciona permissão para mvnw
      run: chmod +x mvnw
    - name: Análise SonarCloud
      run: ./mvnw verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=lab-devops-project
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
 
  tests:
    name: Testes automatizados
    needs: code-quality
    runs-on: ubuntu-latest    
    
    steps:
    - name: Git Checkout
      uses: actions/checkout@v3
    - name: Configura JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Testes Unitários
      run: mvn -B test --file pom.xml   
       
  push-image:
    name: Enviar imagem Heroku
    needs: [code-quality, tests]
    runs-on: ubuntu-latest
    
    steps:
    - name: Prepara ambiente Docker
      uses: docker/setup-buildx-action@v2
      with:
        install: true
    - name: Login no Heroku
      uses: docker/login-action@v2
      with:
        registry: registry.heroku.com
        username: ${{ secrets.HEROKU_EMAIL }}
        password: ${{ secrets.HEROKU_API_KEY }}
    - name: Criação e envio da imagem
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web:latest

  deploy:
    name: Publica ambiente Desenvolvimento
    needs: push-image
    runs-on: ubuntu-latest
    
    steps:
    - name: Login no Heroku
      uses: docker/login-action@v2
      with:
        registry: registry.heroku.com
        username: ${{ secrets.HEROKU_EMAIL }}
        password: ${{ secrets.HEROKU_API_KEY }}
    - name: Publicação
      run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web
      env:
        HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
